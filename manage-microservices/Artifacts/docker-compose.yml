version: '3.8'
services:
  cont-db:
    container_name: cont-db
    build:
      context: mysql-db
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    networks:
      - my-network
    volumes:
      - mysql-data:/var/lib/mysql
  cont-db2:
    container_name: cont-db2
    build:
      context: mysql-db2
      dockerfile: Dockerfile
    ports:
      - "3307:3306"
    networks:
      - my-network
    volumes:
      - mysql-data2:/var/lib/mysql

  springboot-customer:
    container_name: springboot-customer
    build:
      context: people-management
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - my-network
    depends_on:
      - cont-db
      #condition: service_healthy
    environment:
      WAIT_HOSTS: cont-db:3306

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - my-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  springboot-banking-accounts:
    container_name: springboot-banking-accounts
    build:
      context: accounts-movements
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    networks:
      - my-network
    depends_on:
      - cont-db2
      #condition: service_healthy
    environment:
      WAIT_HOSTS: cont-db2:3307

networks:
  my-network:

volumes:
  mysql-data:
    driver: local
  mysql-data2:
    driver: local